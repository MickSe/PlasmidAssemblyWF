//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.

params {
    help = false
    version = false
    out_dir = "output"
    fastq = null
    db_directory = null
    threads = 4
    host_reference = null
    regions_bedfile = null
    approx_size = 7000
    assm_coverage = 60
    trim_length = 150
    prefix = null
    min_barcode = 0
    max_barcode = 192
    primers = "$projectDir/data/primers.tsv"
    reference = null
    sample = null
    sample_sheet = null
    disable_ping = false
    approx_size_sheet = null
    process_label = "wfplasmid"
    analyse_unclassified = false
    basecaller_cfg = "dna_r10.4.1_e8.2_400bps_hac"
    medaka_model = null
    flye_quality = "nano-hq"

    ref_seq_sheet = null
    ref_seq = null
    
    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf,process_label'

    wf {
      example_cmd = [
          "--fastq test_data/test",
          "--db_directory wf-clone-validation-db",
          "--threads 4",
          "--ref_seq optional/path/to/reference.fasta",
      ]
      // container_sha is the previous docker image used be EPI2ME. A new image was generated based on this one 
      // containing the additional tool sniffles and is used instead (wf-clone-validation-with-sniffles)
      container_sha = "sha1a1434106095e4ae0de5d59fa3390ca6b786f5b4"
      container_sha_medaka = "sha5603de35d5a38721b78af89200ace153ce821ef4"
      agent = null
    }
}

manifest {
    name            = 'epi2me-labs/extended-wf-clone-validation'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-clone-validation'
    description     = 'De-novo reconstruction, annotation and variant calling of synthetic plasmid sequences, annotation and variant calling.'
    mainScript      = 'main.nf'
    nextflowVersion = '>=20.10.0'
    version         = 'v2.0'
}

executor {
    $local {
        cpus = 4
        memory = "8 GB"
    }
}

epi2melabs {
  tags = "plasmid,denovo,annotation"
}

// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    withLabel:wfplasmid {
        container = "wf-clone-validation-with-sniffles" // previously "ontresearch/wf-clone-validation:${params.wf.container_sha}"
    }
    withLabel:medaka {
        container = "ontresearch/medaka:${params.wf.container_sha_medaka}"
    }
    withLabel:sniffles {
        container = "wf-clone-validation-with-sniffles"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}

profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }

    conda {
        conda.enabled = true
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:wfplasmid {
                container = "${params.aws_image_prefix}-wf-clone-validation:${params.wf.container_sha}-root"
            }
            withLabel:medaka {
                container = "${params.aws_image_prefix}-medaka:${params.wf.container_sha_medaka}-root"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }
    aws.region = 'eu-west-1'
    aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}

timeline {
  enabled = true
  file = "${params.out_dir}/execution/timeline.html"
  timeline.overwrite = true
}
report {
  enabled = true
  file = "${params.out_dir}/execution/report.html"
  report.overwrite = true
}
trace {
  enabled = true
  file = "${params.out_dir}/execution/trace.txt"
  trace.overwrite = true
}
env {
    PYTHONNOUSERSITE = 1
}
